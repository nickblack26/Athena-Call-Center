//
//  example-data.swift
//  Athena Call Center
//
//  Created by Nick Black on 8/7/24.
//

import Foundation

extension CustomField {
    static let examples: [CustomField] = [
        CustomField(
            id: 101,
            caption: "Custom Text Field",
            type: .Text,
            entryMethod: .EntryField,
            numberOfDecimals: nil,
            value: "Example Value"
        ),
        CustomField(
            id: 102,
            caption: "Custom Number Field",
            type: .Number,
            entryMethod: .EntryField,
            numberOfDecimals: 2,
            value: "123.45"
        )
    ]
}

extension Reference {
    static let examples: [Reference] = [
        Reference(id: 1, name: "Board", sort: 1, identifier: "BOARD123"),
        Reference(id: 2, name: "Status", sort: 2, identifier: "STATUS123"),
        Reference(id: 3, name: "Priority", sort: nil, identifier: nil)
    ]
}

extension ServiceTicket {
    static let examples: [ServiceTicket] = [
        .init(
           id: 1001,
           summary: "Network Issue",
           recordType: "Incident",
           board: Reference(id: 1, name: "IT Support", sort: 1, identifier: "BOARD_IT"),
           status: Reference(id: 2, name: "Open", sort: 1, identifier: "STATUS_OPEN"),
           workRole: nil,
           company: Reference(id: 3, name: "Acme Corp", sort: 1, identifier: "COMPANY_ACME"),
           site: nil,
           siteName: "Headquarters",
           country: Reference(id: 4, name: "USA", sort: 1, identifier: "COUNTRY_USA"),
           contactName: "John Doe",
           contactPhoneNumber: "+1234567890",
           type: Reference(id: 5, name: "Network", sort: 1, identifier: "TYPE_NETWORK"),
           priority: Reference(id: 6, name: "High", sort: 1, identifier: "PRIORITY_HIGH"),
           serviceLocation: nil,
           source: Reference(id: 7, name: "Phone", sort: 1, identifier: "SOURCE_PHONE"),
           requiredDate: "2024-08-01T00:00:00Z",
           severity: "High",
           impact: "High",
           externalXRef: "EXT123",
           allowAllClientsPortalView: true,
           customerUpdatedFlag: false,
           automaticEmailContactFlag: true,
           automaticEmailResourceFlag: false,
           automaticEmailCcFlag: true,
           closedDate: nil,
           closedBy: nil,
           closedFlag: false,
           approved: true,
           estimatedExpenseCost: 100.0,
           estimatedExpenseRevenue: 150.0,
           estimatedProductCost: 200.0,
           estimatedProductRevenue: 250.0,
           estimatedTimeCost: 50.0,
           estimatedTimeRevenue: 75.0,
           billingMethod: "Hourly",
           subBillingMethod: "Fixed",
           dateResolved: nil,
           dateResplan: nil,
           dateResponded: "2024-08-01T08:00:00Z",
           resolveMinutes: 120,
           resPlanMinutes: 60,
           respondMinutes: 30,
           isInSla: true,
           hasChildTicket: false,
           hasMergedChildTicketFlag: false,
           billTime: "All",
           billExpenses: "None",
           billProducts: "All",
           location: Reference(id: 8, name: "Office", sort: 1, identifier: "LOCATION_OFFICE"),
           department: Reference(id: 9, name: "IT", sort: 1, identifier: "DEPT_IT"),
           mobileGuid: "GUID1234567890",
           sla: Reference(id: 10, name: "Standard SLA", sort: 1, identifier: "SLA_STANDARD"),
           slaStatus: "In Progress",
           requestForChangeFlag: false,
           currency: Currency.examples[0],
           escalationStartDateUTC: "2024-08-01T09:00:00Z",
           escalationLevel: 2,
           minutesBeforeWaiting: 10,
           respondedSkippedMinutes: 0,
           resplanSkippedMinutes: 0,
           respondedHours: 1.0,
           respondedBy: "Jane Smith",
           resplanHours: 2.0,
           resplanBy: "Jane Smith",
           resolutionHours: 3.0,
           resolvedBy: "Jane Smith",
           minutesWaiting: 5,
           customFields: CustomField.examples
       ),
        .init(
            id: 1002,
            summary: "Email Service Down",
            recordType: "Issue",
            board: Reference(id: 1, name: "IT Support", sort: 1, identifier: "BOARD_IT"),
            status: Reference(id: 2, name: "In Progress", sort: 2, identifier: "STATUS_IN_PROGRESS"),
            workRole: Reference(id: 11, name: "Technician", sort: 1, identifier: "WORK_ROLE_TECH"),
            company: Reference(id: 4, name: "Globex Corp", sort: 2, identifier: "COMPANY_GLOBEX"),
            site: Reference(id: 12, name: "Remote Site", sort: 2, identifier: "SITE_REMOTE"),
            siteName: "Remote Office",
            country: Reference(id: 5, name: "Canada", sort: 2, identifier: "COUNTRY_CAN"),
            contactName: "Alice Johnson",
            contactPhoneNumber: "+1987654321",
            type: Reference(id: 6, name: "Email", sort: 2, identifier: "TYPE_EMAIL"),
            priority: Reference(id: 7, name: "Medium", sort: 2, identifier: "PRIORITY_MEDIUM"),
            serviceLocation: Reference(id: 8, name: "Office", sort: 1, identifier: "LOCATION_OFFICE"),
            source: Reference(id: 9, name: "Email", sort: 2, identifier: "SOURCE_EMAIL"),
            requiredDate: "2024-08-02T12:00:00Z",
            severity: "Medium",
            impact: "Medium",
            externalXRef: "EXT456",
            allowAllClientsPortalView: false,
            customerUpdatedFlag: true,
            automaticEmailContactFlag: false,
            automaticEmailResourceFlag: true,
            automaticEmailCcFlag: false,
            closedDate: nil,
            closedBy: nil,
            closedFlag: false,
            approved: true,
            estimatedExpenseCost: 200.0,
            estimatedExpenseRevenue: 300.0,
            estimatedProductCost: 400.0,
            estimatedProductRevenue: 500.0,
            estimatedTimeCost: 75.0,
            estimatedTimeRevenue: 100.0,
            billingMethod: "Fixed",
            subBillingMethod: "Hourly",
            dateResolved: nil,
            dateResplan: nil,
            dateResponded: "2024-08-02T08:30:00Z",
            resolveMinutes: 90,
            resPlanMinutes: 45,
            respondMinutes: 20,
            isInSla: true,
            hasChildTicket: true,
            hasMergedChildTicketFlag: false,
            billTime: "None",
            billExpenses: "All",
            billProducts: "None",
            location: Reference(id: 10, name: "Remote Office", sort: 2, identifier: "LOCATION_REMOTE"),
            department: Reference(id: 11, name: "Support", sort: 2, identifier: "DEPT_SUPPORT"),
            mobileGuid: "GUID0987654321",
            sla: Reference(id: 12, name: "Enhanced SLA", sort: 2, identifier: "SLA_ENHANCED"),
            slaStatus: "Pending",
            requestForChangeFlag: false,
            currency: Currency.examples[1],
            escalationStartDateUTC: "2024-08-02T09:30:00Z",
            escalationLevel: 1,
            minutesBeforeWaiting: 15,
            respondedSkippedMinutes: 5,
            resplanSkippedMinutes: 3,
            respondedHours: 1.5,
            respondedBy: "Bob Taylor",
            resplanHours: 2.5,
            resplanBy: "Bob Taylor",
            resolutionHours: 4.0,
            resolvedBy: "Bob Taylor",
            minutesWaiting: 10,
            customFields: []
        ),
        .init(
            id: 1003,
            summary: "Printer Not Working",
            recordType: "Request",
            board: Reference(id: 2, name: "Office Support", sort: 2, identifier: "BOARD_OFFICE"),
            status: Reference(id: 3, name: "Closed", sort: 3, identifier: "STATUS_CLOSED"),
            workRole: Reference(id: 13, name: "Support Agent", sort: 2, identifier: "WORK_ROLE_SUPPORT"),
            company: Reference(id: 6, name: "Initech", sort: 3, identifier: "COMPANY_INITECH"),
            site: Reference(id: 14, name: "Main Office", sort: 1, identifier: "SITE_MAIN"),
            siteName: "Main Headquarters",
            country: Reference(id: 7, name: "UK", sort: 3, identifier: "COUNTRY_UK"),
            contactName: "Charlie Brown",
            contactPhoneNumber: "+441234567890",
            type: Reference(id: 8, name: "Hardware", sort: 1, identifier: "TYPE_HARDWARE"),
            priority: Reference(id: 9, name: "Low", sort: 3, identifier: "PRIORITY_LOW"),
            serviceLocation: Reference(id: 15, name: "Head Office", sort: 3, identifier: "LOCATION_HEAD_OFFICE"),
            source: Reference(id: 10, name: "Web", sort: 3, identifier: "SOURCE_WEB"),
            requiredDate: "2024-08-03T15:00:00Z",
            severity: "Low",
            impact: "Low",
            externalXRef: "EXT789",
            allowAllClientsPortalView: false,
            customerUpdatedFlag: true,
            automaticEmailContactFlag: false,
            automaticEmailResourceFlag: true,
            automaticEmailCcFlag: false,
            closedDate: "2024-08-04T12:00:00Z",
            closedBy: "Eve Smith",
            closedFlag: true,
            approved: true,
            estimatedExpenseCost: 50.0,
            estimatedExpenseRevenue: 75.0,
            estimatedProductCost: 100.0,
            estimatedProductRevenue: 150.0,
            estimatedTimeCost: 25.0,
            estimatedTimeRevenue: 35.0,
            billingMethod: "Retainer",
            subBillingMethod: "None",
            dateResolved: "2024-08-04T10:00:00Z",
            dateResplan: "2024-08-03T16:00:00Z",
            dateResponded: "2024-08-03T15:30:00Z",
            resolveMinutes: 120,
            resPlanMinutes: 60,
            respondMinutes: 15,
            isInSla: true,
            hasChildTicket: false,
            hasMergedChildTicketFlag: false,
            billTime: "Retainer",
            billExpenses: "None",
            billProducts: "All",
            location: Reference(id: 16, name: "Main Office", sort: 3, identifier: "LOCATION_MAIN_OFFICE"),
            department: Reference(id: 17, name: "IT", sort: 3, identifier: "DEPT_IT"),
            mobileGuid: "GUID5678901234",
            sla: Reference(id: 13, name: "Basic SLA", sort: 3, identifier: "SLA_BASIC"),
            slaStatus: "Completed",
            requestForChangeFlag: false,
            currency: Currency.examples[2],
            escalationStartDateUTC: "2024-08-03T17:00:00Z",
            escalationLevel: 0,
            minutesBeforeWaiting: 0,
            respondedSkippedMinutes: 0,
            resplanSkippedMinutes: 0,
            respondedHours: 0.25,
            respondedBy: "Frank Green",
            resplanHours: 1.0,
            resplanBy: "Frank Green",
            resolutionHours: 2.0,
            resolvedBy: "Frank Green",
            minutesWaiting: 0,
            customFields: [CustomField.examples[0]]
        )
    ]
}

extension Currency {
    static let examples: [Currency] = [
        .init(
            id: 1,
            symbol: "$",
            currencyCode: "USD",
            decimalSeparator: ".",
            numberOfDecimals: 2,
            thousandsSeparator: ",",
            negativeParenthesesFlag: true,
            displaySymbolFlag: true,
            currencyIdentifier: "CURRENCY_USD",
            displayIdFlag: false,
            rightAlign: false,
            name: "United States Dollar"
        ),
        .init(
            id: 2,
            symbol: "€",
            currencyCode: "EUR",
            decimalSeparator: ",",
            numberOfDecimals: 2,
            thousandsSeparator: ".",
            negativeParenthesesFlag: false,
            displaySymbolFlag: true,
            currencyIdentifier: "CURRENCY_EUR",
            displayIdFlag: false,
            rightAlign: false,
            name: "Euro"
        ),
        .init(
            id: 3,
            symbol: "¥",
            currencyCode: "JPY",
            decimalSeparator: ".",
            numberOfDecimals: 0,
            thousandsSeparator: ",",
            negativeParenthesesFlag: false,
            displaySymbolFlag: true,
            currencyIdentifier: "CURRENCY_JPY",
            displayIdFlag: true,
            rightAlign: false,
            name: "Japanese Yen"
        )
    ]
}
